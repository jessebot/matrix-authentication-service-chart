{{- if not .Values.mas.matrix.existingSecret }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "matrix-authentication-service.fullname" . }}-initial-config-secret
stringData:
  config.yaml: |
    database:
      uri: "REPLACE_ME"
      max_connections: 10
      min_connections: 0
      connect_timeout: 30
      idle_timeout: 600
      max_lifetime: 1800

    matrix:
      homeserver: "{{ .Values.mas.matrix.homeserver }}"
      secret: "REPLACE_ME"
      endpoint: "{{ .Values.mas.matrix.endpoint }}"

    policy:
      data:
        admin_users: {{ .Values.mas.policy.data.admin_users }}

        admin_clients: {{ .Values.mas.policy.data.admin_clients }}

        client_registration:
          allow_host_mismatch: true
          allow_insecure_uris: true

        passwords:
          min_length: 16
          require_lowercase: true
          require_uppercase: true
          require_number: true

    upstream_oauth2:
      providers:
        - id: {{ .Values.mas.providers }}

          issuer: https://example.com/

          human_name: Example

          brand_name: zitadel

          client_id: "REPLACE_ME"

          client_secret: "REPLACE_ME"

          token_endpoint_auth_method: client_secret_post

          scope: "openid email profile"

          discovery_mode: oidc

          pkce_method: auto

          authorization_endpoint: https://example.com/oauth2/authorize

          token_endpoint: https://example.com/oauth2/token

          jwks_uri: https://example.com/oauth2/keys

          claims_imports:
            subject:
              template: ""

            localpart:
              #action: force
              template: ""

            displayname:
              #action: suggest
              template: ""

            email:
              #action: suggest
              template: ""

              set_email_verification: import

      secrets:
        encryption: "REPLACE_ME"
        keys: []
{{- end }}
